name: Crea PR da Issue di normalizzazione

on:
  issues:
    types: [opened]

jobs:
  generate-pr:
    if: contains(github.event.issue.labels.*.name, 'normalizzazione') || contains(github.event.issue.labels.*.name, 'richiesta')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Debug step (opzionale, rimuovi dopo il test)
      - name: Debug labels
        run: |
          echo "Issue labels: ${{ github.event.issue.labels.*.name }}"

      # 1. Estrai i dati dal corpo dell'Issue Form
      - id: parse
        run: |
          # Estrai i valori dai campi del form YAML
          MAL_NAME=$(echo "${{ github.event.issue.body }}" | grep -A1 "MAL English name" | tail -n1 | sed 's/^[[:space:]]*//')
          AS_NAME=$(echo "${{ github.event.issue.body }}" | grep -A1 "AnimeSaturn name" | tail -n1 | sed 's/^[[:space:]]*//')
          
          # Rimuovi caratteri di escape e spazi extra
          MAL_NAME=$(echo "$MAL_NAME" | sed 's/^"//;s/"$//')
          AS_NAME=$(echo "$AS_NAME" | sed 's/^"//;s/"$//')
          
          echo "mal_name=$MAL_NAME" >> $GITHUB_OUTPUT
          echo "as_name=$AS_NAME" >> $GITHUB_OUTPUT
          
          echo "Parsed MAL name: '$MAL_NAME'"
          echo "Parsed AS name: '$AS_NAME'"

      # 2. Applica la patch al file TypeScript con Python
      - name: Aggiungi riga di normalizzazione
        run: |
          python3 -c "
          import re
          
          mal_name = '${{ steps.parse.outputs.mal_name }}'
          as_name = '${{ steps.parse.outputs.as_name }}'
          
          with open('src/providers/animesaturn-provider.ts', 'r') as f:
              content = f.read()
          
          # Trova il commento e inserisci prima
          pattern = r'(.*?)(// Qui puoi aggiungere altre normalizzazioni custom)'
          replacement = r'\1    \"' + mal_name + '\": \"' + as_name + '\",\n    \2'
          
          new_content = re.sub(pattern, replacement, content, flags=re.DOTALL)
          
          with open('src/providers/animesaturn-provider.ts', 'w') as f:
              f.write(new_content)
          
          print(f'Added normalization: \"{mal_name}\": \"{as_name}\"')
          "

      # 3. Crea la Pull Request
      - name: Crea PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat(normalize): add \"${{ steps.parse.outputs.mal_name }}\""
          branch: "normalizza-${{ github.event.issue.number }}"
          title: "Normalizzazione: ${{ steps.parse.outputs.mal_name }}"
          body: |
            ## ðŸ”— Nuova normalizzazione

            | Campo | Valore |
            |-------|--------|
            | **MAL English name** | ${{ steps.parse.outputs.mal_name }} |
            | **AnimeSaturn name** | ${{ steps.parse.outputs.as_name }} |

            ### Checklist
            - [ ] Compilazione corretta secondo Issue
            - [ ] I test esistenti passano
            - [ ] Non rompe altre normalizzazioni

            _Questa PR Ã¨ stata generata automaticamente dalla Issue #${{ github.event.issue.number }}._
